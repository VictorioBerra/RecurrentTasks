@using RecurrentTasks;
@using RecurrentTasks.Sample;
@inject ITask<SampleTask> myTask
@inject SampleTaskRunHistory runHistory
<html>
<body>
    <h1>RecurrentTasks Sample</h1>
    <dl>
        <dt>TRunnable type</dt>
        <dd>@myTask.RunnableType.FullName</dd>

        <dt>IsStarted</dt>
        <dd>@myTask.IsStarted</dd>

        <dt>RunStatus.LastResult</dt>
        <dd>@myTask.RunStatus.LastResult</dd>

        <dt>RunStatus.LastRunTime</dt>
        <dd>@myTask.RunStatus.LastRunTime</dd>

        <dt>Options.Interval</dt>
        <dd>@myTask.Options.Interval</dd>

        <dt>RunStatus.NextRunTime</dt>
        <dd>@myTask.RunStatus.NextRunTime (in @(myTask.RunStatus.NextRunTime.Subtract(DateTime.Now)))</dd>
    </dl>

    <form method="post">
        <p>
            Actions:
            <button name="command" value="START">Start</button>
            <button name="command" value="STOP">Stop</button>
            <button name="command" value="TRYRUN">TryRunImmediately</button>
            <br />
            (you may need to <a href=".">refresh page</a> after 1-2 sec after button is pressed)
        </p>
    </form>

    <p>
        Task messages:
        <ul>
            @foreach(var msg in runHistory.Messages)
            {
                <li>@msg</li>
            }
        </ul>
    </p>
</body>
</html>